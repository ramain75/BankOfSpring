<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- build this customer with constructor args and property -->
	<bean id="customer1" class="org.bankofspring.model.Customer">
		<!--  constructor arg -->
		<constructor-arg value="user1" />
		<constructor-arg value="test" />
		<constructor-arg value="customerone" />
		<constructor-arg value="customer1" />
		<!--  accounts property is a map<String(accountNumber),Account> -->
		<property name="accounts">
			<map  value-type="org.bankofspring.model.Account">
				<entry key="account1">
				<!--  internal bean -->
					<bean id="account1" class="org.bankofspring.model.Account">
						<!-- null property not necessary but it can be done -->
						<!-- arguments for constructor in different order -->
						<constructor-arg name="owningCustomers">
							<list>
								<ref bean="customer1" />
							</list>
						</constructor-arg>
						<constructor-arg name="accountNumber" value="account1" />
						<constructor-arg name="accountDescription" value="account1description" />
						<!-- using property -->
						<property name="maxBalanceAmount" value="170000000"></property>
					</bean>
				</entry>
				<entry key="account2">
					<bean id="account2" class="org.bankofspring.model.Account">
						<constructor-arg name="owningCustomers">
							<list>
								<ref bean="customer1" />
							</list>
						</constructor-arg>
						<constructor-arg name="accountNumber" value="account2" />
						<constructor-arg name="accountDescription" value="account2description" />
						<property name="maxBalanceAmount" value="100000000"></property>
					</bean>
				</entry>

			</map>
		</property>
	</bean>

	<bean id="customer2" class="org.bankofspring.model.Customer">
		<constructor-arg name="username" value="user2" />
		<constructor-arg name="password" value="test" />
		<constructor-arg name="customerID">
			<value>customer2</value>
		</constructor-arg>
		<constructor-arg name="name" value="customertwo" />

		
		<property name="accounts">
			<map value-type="org.bankofspring.model.Account">
				<entry key="#{account3.accountNumber}" value-ref="account3"></entry>
				<entry key="#{account4.accountNumber}" value-ref="account4"></entry>
			</map>
		</property> 	
	</bean>
<!--  2 accounts for customer 2-->
   <bean id="account3" class="org.bankofspring.model.Account">

		<constructor-arg name="accountNumber" value="account3" />
		<constructor-arg name="accountDescription" value="account3description" />
		<property name="maxBalanceAmount" value="150000000"></property>
		<property name="accountBalance" value="100"></property>
		<constructor-arg name="owningCustomers">
			<list>
				<ref bean="customer2" />
			</list>
		</constructor-arg>
   </bean>
	<bean id="account4" class="org.bankofspring.model.Account">

		<constructor-arg name="accountNumber" value="account4" />
		<constructor-arg name="accountDescription" value="account4description" />
		<property name="maxBalanceAmount" value="100000000"></property>
		<property name="accountBalance" value="150"></property>
		<constructor-arg name="owningCustomers">
			<list>
				<ref bean="customer2" />
				<ref bean="customer1" />
			</list>
		</constructor-arg>
		<property name="transactions">
			<list>
				<ref bean="txn1"></ref>
			</list>
		</property>

	</bean>

	<!-- A transaction for customer2 account 4 -->
	<bean id="txn1" class="org.bankofspring.model.AccountTransaction">
		<constructor-arg name="toAccount" ref="account4" />
		<constructor-arg name="fromAccount">
			<null />
		</constructor-arg>
		<constructor-arg name="transactionAmount" value="100"></constructor-arg>

		<property name="transactionDate"
			value="#{T(java.util.Calendar).getInstance().set(2015,01,01)}" />

	</bean>

</beans>